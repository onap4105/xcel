{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "autosize": "none",
  "width": 600,
  "padding": 20,
  "signals": [
    {
      "name": "baseUrl",
      "value": "https://your-kibana-url/dashboard-id/"
    },
    {
      "name": "group1_expanded",
      "value": true,
      "bind": {"input": "checkbox", "name": "Available Report Group 1"}
    },
    {
      "name": "group2_expanded",
      "value": false,
      "bind": {"input": "checkbox", "name": "Available Report Group 2"}
    },
    {
      "name": "group3_expanded",
      "value": false,
      "bind": {"input": "checkbox", "name": "Available Report Group 3"}
    },
    {
      "name": "height",
      "update": "20 + (group1_expanded ? 50 + 8*20 : 30) + (group2_expanded ? 50 + 4*20 : 30) + (group3_expanded ? 50 + 2*20 : 30)"
    }
  ],
  "data": [
    {
      "name": "reports",
      "values": [
        {"id": "id1", "label": "Report A1", "group": 1},
        {"id": "id2", "label": "Report A2", "group": 1},
        {"id": "id3", "label": "Report B1", "group": 2},
        {"id": "id4", "label": "Report C1", "group": 3}
      ]
    }
  ],
  "marks": [
    {
      "type": "text",
      "name": "group1_header",
      "encode": {
        "enter": {
          "x": {"value": 5},
          "y": {"value": 20},
          "fontSize": {"value": 16},
          "fontWeight": {"value": "bold"},
          "fill": {"value": "#000"}
        },
        "update": {
          "text": {"value": "Available Report Group 1"}
        }
      }
    },
    {
      "type": "text",
      "name": "group1_reports",
      "from": {"data": "reports"},
      "transform": [
        {"type": "filter", "expr": "datum.group === 1"}
      ],
      "encode": {
        "enter": {
          "x": {"value": 20},
          "fontSize": {"value": 14},
          "fill": {"value": "#1a73e8"},
          "cursor": {"value": "pointer"}
        },
        "update": {
          "y": {"expr": "50 + (index() * 20)"},
          "text": {"field": "label"},
          "href": {"signal": "baseUrl + datum.id"},
          "opacity": {"signal": "group1_expanded ? 1 : 0"}
        }
      }
    },
    {
      "type": "text",
      "name": "group2_header",
      "encode": {
        "enter": {
          "x": {"value": 5},
          "fontSize": {"value": 16},
          "fontWeight": {"value": "bold"},
          "fill": {"value": "#000"}
        },
        "update": {
          "y": {"signal": "group1_expanded ? 50 + 8*20 + 30 : 30"},
          "text": {"value": "Available Report Group 2"}
        }
      }
    },
    {
      "type": "text",
      "name": "group2_reports",
      "from": {"data": "reports"},
      "transform": [
        {"type": "filter", "expr": "datum.group === 2"}
      ],
      "encode": {
        "enter": {
          "x": {"value": 20},
          "fontSize": {"value": 14},
          "fill": {"value": "#1a73e8"},
          "cursor": {"value": "pointer"}
        },
        "update": {
          "y": {"expr": "(group1_expanded ? 50 + 8*20 + 30 : 30) + 30 + (index() * 20)"},
          "text": {"field": "label"},
          "href": {"signal": "baseUrl + datum.id"},
          "opacity": {"signal": "group2_expanded ? 1 : 0"}
        }
      }
    },
    {
      "type": "text",
      "name": "group3_header",
      "encode": {
        "enter": {
          "x": {"value": 5},
          "fontSize": {"value": 16},
          "fontWeight": {"value": "bold"},
          "fill": {"value": "#000"}
        },
        "update": {
          "y": {"signal": "group2_expanded ? (group1_expanded ? 50 + 8*20 + 30 + 50 + 4*20 + 30 : 50 + 4*20 + 30) : (group1_expanded ? 50 + 8*20 + 30 : 30)"},
          "text": {"value": "Available Report Group 3"}
        }
      }
    },
    {
      "type": "text",
      "name": "group3_reports",
      "from": {"data": "reports"},
      "transform": [
        {"type": "filter", "expr": "datum.group === 3"}
      ],
      "encode": {
        "enter": {
          "x": {"value": 20},
          "fontSize": {"value": 14},
          "fill": {"value": "#1a73e8"},
          "cursor": {"value": "pointer"}
        },
        "update": {
          "y": {"expr": "(group2_expanded ? (group1_expanded ? 50 + 8*20 + 30 + 50 + 4*20 + 30 : 50 + 4*20 + 30) : (group1_expanded ? 50 + 8*20 + 30 : 30)) + 30 + (index() * 20)"},
          "text": {"field": "label"},
          "href": {"signal": "baseUrl + datum.id"},
          "opacity": {"signal": "group3_expanded ? 1 : 0"}
        }
      }
    }
  ],
  "height": {"signal": "height"}
}

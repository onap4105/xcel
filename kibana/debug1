{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "autosize": "none",
  "width": 600,
  "padding": 20,
  "signals": [
    {
      "name": "baseUrl",
      "value": "https://your-kibana-url/dashboard-id/"
    },
    {
      "name": "group1_expanded",
      "value": true,
      "bind": {"input": "checkbox", "name": "Available Report Group 1"}
    },
    {
      "name": "group2_expanded",
      "value": false,
      "bind": {"input": "checkbox", "name": "Available Report Group 2"}
    },
    {
      "name": "group3_expanded",
      "value": false,
      "bind": {"input": "checkbox", "name": "Available Report Group 3"}
    },
    {
      "name": "height",
      "update": "max(
        group1_expanded ? (50 + (group1Count * 20)) : 30,
        group2_expanded ? (220 + (group2Count * 20)) : 200,
        group3_expanded ? (390 + (group3Count * 20)) : 370
      )"
    }
  ],
  "data": [
    {
      "name": "reports",
      "values": [
        {"id": "id1", "label": "Alarm_Message - eventType(1, 2, 3)", "group": 1},
        {"id": "id2", "label": "Alarm_Environment_Message — eventType(4, 5)", "group": 1},
        {"id": "id3", "label": "AlarmDetail — eventType(6)", "group": 1},
        {"id": "id4", "label": "autoTrunkTestAlarm — eventType(7)", "group": 1},
        {"id": "id5", "label": "SbackUpAlarm — eventType(9)", "group": 1},
        {"id": "id6", "label": "reportCondition — eventType(10)", "group": 1},
        {"id": "id7", "label": "diagnosticAlarm — eventType(11)", "group": 1},
        {"id": "id8", "label": "diagnosticAlarmDetails — eventType(12)", "group": 1},
        {"id": "id9", "label": "eventAlarm — eventType(13)", "group": 2},
        {"id": "id10", "label": "exerciseAlarm — eventType(14)", "group": 2},
        {"id": "id11", "label": "removalAlarm and restorationAlarm — eventType(18, 19)", "group": 2},
        {"id": "id12", "label": "removalAlarm or restorationAlarm — eventType(20)", "group": 2},
        {"id": "id13", "label": "more report A", "group": 3},
        {"id": "id14", "label": "more report B", "group": 3}
      ],
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["group"],
          "fields": ["id"],
          "ops": ["count"],
          "as": ["count"]
        },
        {
          "type": "identifier",
          "as": "id"
        }
      ]
    },
    {
      "name": "group1",
      "source": "reports",
      "transform": [
        {"type": "filter", "expr": "datum.group === 1"},
        {
          "type": "window",
          "ops": ["row_number"],
          "as": ["row"],
          "groupby": ["group"]
        }
      ]
    },
    {
      "name": "group2",
      "source": "reports",
      "transform": [
        {"type": "filter", "expr": "datum.group === 2"},
        {
          "type": "window",
          "ops": ["row_number"],
          "as": ["row"],
          "groupby": ["group"]
        }
      ]
    },
    {
      "name": "group3",
      "source": "reports",
      "transform": [
        {"type": "filter", "expr": "datum.group === 3"},
        {
          "type": "window",
          "ops": ["row_number"],
          "as": ["row"],
          "groupby": ["group"]
        }
      ]
    },
    {
      "name": "group1Count",
      "values": [{"count": 8}]
    },
    {
      "name": "group2Count",
      "values": [{"count": 4}]
    },
    {
      "name": "group3Count",
      "values": [{"count": 2}]
    }
  ],
  "marks": [
    {
      "type": "group",
      "name": "group1_container",
      "encode": {
        "enter": {
          "x": {"value": 0},
          "y": {"value": 0}
        }
      },
      "marks": [
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": {"value": 5},
              "y": {"value": 20},
              "fontSize": {"value": 16},
              "fontWeight": {"value": "bold"},
              "fill": {"value": "#000"}
            },
            "update": {
              "text": {"value": "Available Report Group 1"}
            }
          }
        },
        {
          "type": "text",
          "from": {"data": "group1"},
          "encode": {
            "enter": {
              "x": {"value": 20},
              "fontSize": {"value": 14},
              "fill": {"value": "#1a73e8"},
              "cursor": {"value": "pointer"}
            },
            "update": {
              "y": {"expr": "50 + (datum.row - 1) * 20"},
              "text": {"field": "label"},
              "href": {"signal": "baseUrl + datum.id"},
              "opacity": {"signal": "group1_expanded ? 1 : 0"}
            }
          }
        }
      ]
    },
    {
      "type": "group",
      "name": "group2_container",
      "encode": {
        "enter": {
          "x": {"value": 0},
          "y": {
            "signal": "group1_expanded ? 50 + (group1Count[0].count * 20) + 30 : 30"
          }
        }
      },
      "marks": [
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": {"value": 5},
              "y": {"value": 20},
              "fontSize": {"value": 16},
              "fontWeight": {"value": "bold"},
              "fill": {"value": "#000"}
            },
            "update": {
              "text": {"value": "Available Report Group 2"}
            }
          }
        },
        {
          "type": "text",
          "from": {"data": "group2"},
          "encode": {
            "enter": {
              "x": {"value": 20},
              "fontSize": {"value": 14},
              "fill": {"value": "#1a73e8"},
              "cursor": {"value": "pointer"}
            },
            "update": {
              "y": {"expr": "50 + (datum.row - 1) * 20"},
              "text": {"field": "label"},
              "href": {"signal": "baseUrl + datum.id"},
              "opacity": {"signal": "group2_expanded ? 1 : 0"}
            }
          }
        }
      ]
    },
    {
      "type": "group",
      "name": "group3_container",
      "encode": {
        "enter": {
          "x": {"value": 0},
          "y": {
            "signal": "group2_expanded ? group1_expanded ? 50 + (group1Count[0].count * 20) + 30 + 50 + (group2Count[0].count * 20) + 30 : 50 + (group2Count[0].count * 20) + 30 : group1_expanded ? 50 + (group1Count[0].count * 20) + 30 : 30"
          }
        }
      },
      "marks": [
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": {"value": 5},
              "y": {"value": 20},
              "fontSize": {"value": 16},
              "fontWeight": {"value": "bold"},
              "fill": {"value": "#000"}
            },
            "update": {
              "text": {"value": "Available Report Group 3"}
            }
          }
        },
        {
          "type": "text",
          "from": {"data": "group3"},
          "encode": {
            "enter": {
              "x": {"value": 20},
              "fontSize": {"value": 14},
              "fill": {"value": "#1a73e8"},
              "cursor": {"value": "pointer"}
            },
            "update": {
              "y": {"expr": "50 + (datum.row - 1) * 20"},
              "text": {"field": "label"},
              "href": {"signal": "baseUrl + datum.id"},
              "opacity": {"signal": "group3_expanded ? 1 : 0"}
            }
          }
        }
      ]
    }
  ],
  "height": {"signal": "height"}
}
Bad string containing newline at line 29,0 >>>        group1_expan ...
